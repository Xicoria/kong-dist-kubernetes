cassandra:
  enabled: false
  ## Cassandra image version
  ## ref: https://hub.docker.com/r/library/cassandra/
  image:
    repo: "cassandra"
    tag: "3"
    pullPolicy: IfNotPresent

  ## Specify a service type
  ## ref: http://kubernetes.io/docs/user-guide/services/
  service:
    type: ClusterIP

  ## Persist data to a persitent volume
  persistence:
    enabled: false

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## Minimum memory for development is 4GB and 2 CPU cores
  ## Minimum memory for production is 8GB and 4 CPU cores
  ## ref: http://docs.datastax.com/en/archived/cassandra/2.0/cassandra/architecture/architecturePlanningHardware_c.html
  resources:
    requests:
      memory: 4Gi
      cpu: 2
    limits:
      memory: 4Gi
      cpu: 2

  ## Change cassandra configuration paramaters below:
  ## ref: http://docs.datastax.com/en/cassandra/3.0/cassandra/configuration/configCassandra_yaml.html
  ## Recommended max heap size is 1/2 of system memory
  ## Recommeneed heap new size is 1/4 of max heap size
  ## ref: http://docs.datastax.com/en/cassandra/3.0/cassandra/operations/opsTuneJVM.html
  config:
    cluster_name: cassandra
    cluster_size: 3
    seed_size: 2
    num_tokens: 256
    dc_name: DC1
    rack_name: RAC1
    endpoint_snitch: SimpleSnitch
    max_heap_size: 2048M
    heap_new_size: 512M
    ports:
      cql: 9042
      thrift: 9160

  ## Configure node selector. Edit code below for adding selector to pods
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  # selector:
    # nodeSelector:
      # cloud.google.com/gke-nodepool: pool-db

  ## Additional pod labels
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

postgresql:
  enabled: true
  image: "postgres"
  ## postgres image version
  ## ref: https://hub.docker.com/r/library/postgres/tags/
  ##
  imageTag: "9.6.2"

  ## Specify a imagePullPolicy
  ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  # imagePullPolicy:

  ## Create a database user
  ## Default: postgres
  postgresUser: kong
  ## Default: random 10 character string
  postgresPassword: kong

  ## Create a database
  ## Default: the postgres user
  postgresDatabase: kong

  ## Specify initdb arguments, e.g. --data-checksums
  ## ref: https://github.com/docker-library/docs/blob/master/postgres/content.md#postgres_initdb_args
  ## ref: https://www.postgresql.org/docs/current/static/app-initdb.html
  # postgresInitdbArgs:

  ## Persist data to a persitent volume
  persistence:
    enabled: false

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
    subPath: "postgresql-db"

  metrics:
    enabled: false
    image: wrouesnel/postgres_exporter
    imageTag: v0.1.1
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      ## Define additional custom metrics
      ## ref: https://github.com/wrouesnel/postgres_exporter#adding-new-metrics-via-a-config-file
      # customMetrics:
      #   pg_database:
      #     query: "SELECT d.datname AS name, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_database_size(d.datname) ELSE 0 END AS size FROM pg_catalog.pg_database d where datname not in ('template0', 'template1', 'postgres')"
      #     metrics:
      #       - name:
      #           usage: "LABEL"
      #           description: "Name of the database"
      #       - size_bytes:
      #           usage: "GAUGE"
      #           description: "Size of the database in bytes"

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 100m

  service:
    type: ClusterIP
    port: 5432
    externalIPs: []

  networkPolicy:
    ## Enable creation of NetworkPolicy resources.
    ##
    enabled: false

    ## The Policy model to apply. When set to false, only pods with the correct
    ## client label will have network access to the port PostgreSQL is listening
    ## on. When true, PostgreSQL will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: true

  ## Node labels and tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Default values for kong.
# Declare variables to be passed into your templates.

kongAppName: kong-gateway
kongInstanceCount: 1
provisionDB: true
kong:
  admin:
    servicePort: 8001
    serviceSSLPort: 8444
    containerPort: 8001
    containerSSLPort: 8444
    type: NodePort #Options: NodePort, ClusterIP, LoadBalancer
  proxy:
    servicePort: 8000
    serviceSSLPort: 8443
    containerPort: 8000
    containerSSLPort: 8443
    type: NodePort #Options: NodePort, ClusterIP, LoadBalancer
  logLevel: debug #Options: debug, info, notice, warn, error, crit, alert, emerg
  database:
    name: kong-database
    postgres:
      username: kong
      database: kong
      password: kong
      host: postgres
      port: 5432
    cassandra:
      enabled: false
      contactPoints: cassandra
      port: 9042
      keyspace: kong
      replcation: 2
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  #requests:
  #  cpu: 100m
  #  memory: 128Mi
